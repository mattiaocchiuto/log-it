{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///dist/logger_worker.min.js","webpack:///webpack/bootstrap f9bacae04ffb1b51a03b","webpack:///./src/logger_worker.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","initializeConfig","customConfig","config","onmessage","msg","response","data","type","JSON","parse","payload","e","loggingFunction","eval","postMessage"],"mappings":"CAAA,SAAAA,KAAAC,SACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,UACA,kBAAAG,gBAAAC,IACAD,OAAA,WAAAH,SACA,gBAAAC,SACAA,QAAA,MAAAD,UAEAD,KAAA,MAAAC,WACCK,KAAA,WACD,MCAgB,UAAUC,SCN1B,QAAAC,qBAAAC,UAGA,GAAAC,iBAAAD,UACA,MAAAC,kBAAAD,UAAAP,OAGA,IAAAC,QAAAO,iBAAAD,WACAP,WACAS,GAAAF,SACAG,QAAA,EAUA,OANAL,SAAAE,UAAAI,KAAAV,OAAAD,QAAAC,cAAAD,QAAAM,qBAGAL,OAAAS,QAAA,EAGAT,OAAAD,QAvBA,GAAAQ,oBAqCA,OATAF,qBAAAM,EAAAP,QAGAC,oBAAAO,EAAAL,iBAGAF,oBAAAQ,EAAA,GAGAR,oBAAA,KDgBM,SAASL,OAAQD,SAEtB,YEpDD,SAASe,kBAAiBC,cAGxB,MAFAC,QAASD,aAHX,GAAIC,UAQJC,WAAY,QAASA,WAAUC,KAC7B,GAAMC,UAAW,0BAEjB,QAAQD,IAAIE,KAAKC,MACf,IAAK,iBACHP,iBAAiBQ,KAAKC,MAAML,IAAIE,KAAKI,SAErC,MAEF,KAAK,UACH,GAAIA,SAAU,IAEd,KACEA,QAAUF,KAAKC,MAAML,IAAIE,KAAKI,SAC9B,MAAOC,GACPD,QAAUN,IAAIE,KAAKI,QAGU,mBAApBE,kBAAmCV,OAAOU,iBACnDC,KAAKX,OAAOU,iBAGVA,iBACFA,gBAAgBF,SAStBI,YAAYT","file":"dist/logger_worker.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"LogIt\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LogIt\"] = factory();\n\telse\n\t\troot[\"LogIt\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"LogIt\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LogIt\"] = factory();\n\telse\n\t\troot[\"LogIt\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t// import * as constants from './constants';\n\t\n\tvar config = {};\n\t\n\tfunction initializeConfig(customConfig) {\n\t  config = customConfig;\n\t\n\t  return config;\n\t}\n\t\n\tonmessage = function onmessage(msg) {\n\t  var response = 'hello, I am a web worker';\n\t\n\t  switch (msg.data.type) {\n\t    case 'initialization':\n\t      {\n\t        initializeConfig(JSON.parse(msg.data.payload));\n\t\n\t        break;\n\t      }\n\t    case 'onerror':\n\t      {\n\t        var payload = null;\n\t\n\t        try {\n\t          payload = JSON.parse(msg.data.payload);\n\t        } catch (e) {\n\t          payload = msg.data.payload;\n\t        }\n\t\n\t        if (typeof loggingFunction === 'undefined' && config.loggingFunction) {\n\t          eval(config.loggingFunction);\n\t        }\n\t\n\t        if (loggingFunction) {\n\t          loggingFunction(payload);\n\t        }\n\t\n\t        break;\n\t      }\n\t    default:\n\t      break;\n\t  }\n\t\n\t  postMessage(response);\n\t};\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** dist/logger_worker.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f9bacae04ffb1b51a03b\n **/","// import * as constants from './constants';\n\nlet config = {};\n\nfunction initializeConfig(customConfig) {\n  config = customConfig;\n\n  return config;\n}\n\nonmessage = function onmessage(msg) {\n  const response = 'hello, I am a web worker';\n\n  switch (msg.data.type) {\n    case 'initialization': {\n      initializeConfig(JSON.parse(msg.data.payload));\n\n      break;\n    }\n    case 'onerror': {\n      let payload = null;\n\n      try {\n        payload = JSON.parse(msg.data.payload);\n      } catch (e) {\n        payload = msg.data.payload;\n      }\n      \n      if (typeof loggingFunction === 'undefined' && config.loggingFunction) {\n        eval(config.loggingFunction);\n      }\n\n      if (loggingFunction) {\n        loggingFunction(payload);\n      }\n\n      break;\n    }\n    default:\n      break;\n  }\n\n  postMessage(response);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/logger_worker.js\n **/"],"sourceRoot":""}